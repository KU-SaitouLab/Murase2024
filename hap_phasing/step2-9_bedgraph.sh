# Step 13. Create 10kb-bin bedgraph file
chrom_size=genome.chrom.size   # chrom.size file, list of chr and N bases, delimitted by TAB.
cat ${chrom_size} ${bam1%.bam}.bed | perl -F'\t' -anle 'BEGIN {$bin=10000;$mod="m";print "track type=bedGraph";@clist=(1..22,"X");$colm=12;$colu=11;$_="chr$_" for @clist;} if (@F < 3) {$size{$F[0]}=$F[1];} else {if ($F[3] eq $mod) {$l=int(($F[1]-1)/$bin);$mC{"$F[0]:$l"}+=$F[$colm];$uC{"$F[0]:$l"}+=$F[$colu]          ;}} END {for $c (@clist) {for $i (0..int($size{$c}/$bin)) {$l2=($i + 1)*$bin; $l2=$size{$c} if $l2 > $size{$c};print join("\t",$c,$i*$bin,$l2,                             ($mC{"$c:$i"}+$uC{"$c:$i"}) > 0 ? $mC{"$c:$i"} / ($mC{"$c:$i"}+$uC{"$c:$i"}) * 100 : 0) if ($mC{"$c:$i"}+$uC{"$c:$i"})>20; }}}' > ${f%.bam}_10kb_5mC.bedgraph
cat ${chrom_size} ${bam2%.bam}.bed | perl -F'\t' -anle 'BEGIN {$bin=10000;$mod="m";print "track type=bedGraph";@clist=(1..22,"X");$colm=12;$colu=11;$_="chr$_" for @clist;} if (@F < 3) {$size{$F[0]}=$F[1];} else {if ($F[3] eq $mod) {$l=int(($F[1]-1)/$bin);$mC{"$F[0]:$l"}+=$F[$colm];$uC{"$F[0]:$l"}+=$F[$colu]          ;}} END {for $c (@clist) {for $i (0..int($size{$c}/$bin)) {$l2=($i + 1)*$bin; $l2=$size{$c} if $l2 > $size{$c};print join("\t",$c,$i*$bin,$l2,                             ($mC{"$c:$i"}+$uC{"$c:$i"}) > 0 ? $mC{"$c:$i"} / ($mC{"$c:$i"}+$uC{"$c:$i"}) * 100 : 0) if ($mC{"$c:$i"}+$uC{"$c:$i"})>20; }}}' > ${f%.bam}_10kb_5mC.bedgraph
